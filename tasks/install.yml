---
- name: Download gcloud sdk
  ansible.builtin.get_url:
    url: https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-{{ gcloud_version }}-linux-x86_64.tar.gz
    dest: /tmp/google-cloud-sdk-{{ gcloud_version }}-linux-x86_64.tar.gz
  become: true
  become_user: "{{ gcloud_user }}"

- name: Untar gcloud
  ansible.builtin.unarchive:
    remote_src: true
    src: /tmp/google-cloud-sdk-{{ gcloud_version }}-linux-x86_64.tar.gz
    dest: "{{ gcloud_home }}"
  become: true
  become_user: "{{ gcloud_user }}"

- name: Install Python App Engine
  ansible.builtin.command: "{{ gcloud_home }}/google-cloud-sdk/bin/gcloud components install app-engine-python -q"
  args:
    creates: "{{ gcloud_home }}/google-cloud-sdk/platform/google_appengine/appcfg.py"
  become: true
  become_user: "{{ gcloud_user }}"

- name: Install Go App Engine
  ansible.builtin.command: "{{ gcloud_home }}/google-cloud-sdk/bin/gcloud components install app-engine-go -q"
  args:
    creates: "{{ gcloud_home }}/google-cloud-sdk/platform/google_appengine/goapp"
  become: true
  become_user: "{{ gcloud_user }}"

- name: Install Java App Engine
  ansible.builtin.command: "{{ gcloud_home }}/google-cloud-sdk/bin/gcloud components install app-engine-java -q"
  args:
    creates: "{{ gcloud_home }}/google-cloud-sdk/platform/google_appengine/google/appengine/tools/java/lib/appengine-tools-api.jar"
  become: true
  become_user: "{{ gcloud_user }}"

- name: Put scripts into place
  ansible.posix.synchronize:
    src: "{{ role_path }}/deployment/scripts/"
    dest: "{{ gcloud_home }}/bin/"
    use_ssh_args: true
    owner: false
    group: false
  become: true
  become_user: "{{ gcloud_user }}"

- name: Fix file permissions
  ansible.builtin.file:
    dest: "{{ gcloud_home }}/bin/"
    owner: "{{ gcloud_user }}"
    recurse: true
